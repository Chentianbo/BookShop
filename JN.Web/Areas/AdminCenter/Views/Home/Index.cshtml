@{
    ViewBag.Title = "管理首页";
    Layout = "~/Areas/AdminCenter/Views/Shared/_Layout.cshtml";
    var Amodel = JN.Services.AdminLoginHelper.CurrentAdmin();
}

<!-- page specific plugin styles -->
<!-- Content -->
<div id="content" >
    <!-- Breadcrumb -->
    <ul class="breadcrumb" >
        <li><a href="@Url.Action("Index", "Home")" class="glyphicons home"><i></i> 首页</a></li>

        <li class="divider"></li>
        <li>@ViewBag.Title</li>
    </ul>
    <div class="separator bottom"></div>
    <!-- // Breadcrumb END -->
    <div class="innerLR">

        <div class="separator bottom"></div>
        <div class="row-fluid">
            <div class="span3">
                <!-- Stats Widget -->
                <a href="" class="widget-stats margin-bottom-none">
                    <span class="glyphicons user"><i></i></span>
                    <span class="txt">所有/今日会员统计</span>
                    <div class="clearfix"></div>
                    <span class="count label label-important">
                        @(MvcCore.Unity.Get<JN.Data.Service.IUserService>().List(x => x.AccountState == 0).Count())
                    /
                    @(MvcCore.Unity.Get<JN.Data.Service.IUserService>().List(x => System.Data.Entity.SqlServer.SqlFunctions.DateDiff("day", x.CreateTime, DateTime.Now) == 0).Count())
                </span>
            </a>
            <!-- // Stats Widget END -->
        </div>
        <div class="span3">

            <!-- Stats Widget -->
            <a href="" class="widget-stats margin-bottom-none">
                <span class="glyphicons coins"><i></i></span>
                <span class="txt">所有/今日图书统计</span>
                <div class="clearfix"></div>
                <span class="count label label-important">
                    @(MvcCore.Unity.Get<JN.Data.Service.IBookInfoService>().List().Count())
                    /
                    @(MvcCore.Unity.Get<JN.Data.Service.IBookInfoService>().List(x => System.Data.Entity.SqlServer.SqlFunctions.DateDiff("day", x.CreateTime, DateTime.Now) == 0).Count())
                </span>
            </a>
            <!-- // Stats Widget END -->

        </div>
        <div class="span3">

            <!-- Stats Widget -->
            <a href="" class="widget-stats margin-bottom-none">
                <span class="glyphicons inbox "><i></i></span>
                <span class="txt">累计/今日下单量</span>
                <div class="clearfix"></div>
                <span class="count label label-important">
                    @(MvcCore.Unity.Get<JN.Data.Service.IShopOrderService>().List().Count())
                    /
                    @(MvcCore.Unity.Get<JN.Data.Service.IShopOrderService>().List(x => System.Data.Entity.SqlServer.SqlFunctions.DateDiff("day", x.CreateTime, DateTime.Now) == 0).Count())
                </span>
            </a>
            <!-- // Stats Widget END -->

        </div>
        <div class="span3">

            <!-- Stats Widget -->
            <a href="" class="widget-stats margin-bottom-none">
                <span class="glyphicons inbox_plus"><i></i></span>
                <span class="txt">所有/今日加入购物车</span>
                <div class="clearfix"></div>
                <span class="count label label-important">
                    @(MvcCore.Unity.Get<JN.Data.Service.IShopCarService>().List().Count())
                    /
                    @(MvcCore.Unity.Get<JN.Data.Service.IShopCarService>().List(x => System.Data.Entity.SqlServer.SqlFunctions.DateDiff("day", x.CreateTime, DateTime.Now) == 0).Count())
                </span>
            </a>
            <!-- // Stats Widget END -->
        </div>
    </div>
    <div class="separator bottom"></div>
    <div class="row-fluid">
        <div class="span6">
            <!-- Widget -->
            <div class="widget">
                <!-- Widget heading -->
                <div class="widget-head">
                    <h4 class="heading">数据图表</h4>
                </div>
                <!-- // Widget heading END -->

                <div class="widget-body">
                    <!-- Simple Chart -->
                    <div id="chart_div" style="width: 100%;height:400px;"></div>
                </div>
            </div>
            <!-- // Widget END -->
        </div>
        <div class="span6">
            <!-- Widget -->
            <div class="widget">
                <!-- Widget heading -->
                <div class="widget-head">
                    <h4 class="heading">数据图表</h4>
                </div>
                <!-- // Widget heading END -->

                <div class="widget-body">
                    <!-- Simple Chart -->
                    <div id="chart_div_book" style="width: 100%;height:400px;"></div>
                </div>
            </div>
            <!-- // Widget END -->
        </div>

        <div class="row-fluid">
            <div class="span6">
                <!-- Widget -->
                <div class="widget">
                    <!-- Widget heading -->
                    <div class="widget-head">
                        <h4 class="heading">数据图表</h4>
                    </div>
                    <!-- // Widget heading END -->

                    <div class="widget-body">
                        <!-- Simple Chart -->
                        <div id="chart_div_shopOrder" style="width: 100%;height:400px;"></div>
                    </div>
                </div>
                <!-- // Widget END -->
            </div>
            <div class="span6">
                <!-- Widget -->
                <div class="widget">
                    <!-- Widget heading -->
                    <div class="widget-head">
                        <h4 class="heading">数据图表</h4>
                    </div>
                    <!-- // Widget heading END -->

                    <div class="widget-body">
                        <!-- Simple Chart -->
                        <div id="chart_div_ordercompale" style="width: 100%;height:400px;"></div>
                    </div>
                </div>
                <!-- // Widget END -->
            </div>
        </div>
        <div class="row-fluid">
            <div class="span6">

                <!-- Stats/List/Sparklines Widget -->
                <div class="widget" data-toggle="collapse-widget">

                    <!-- Widget Heading -->
                    <div class="widget-head">
                        <h4 class="heading glyphicons stats"><i></i>最新公告</h4>
                    </div>
                    <!-- // Widget Heading END -->

                    <div class="widget-body list collapse in">
                        <table class="table table-bordered table-condensed">
                            <tbody>
                                @{
                                var ggLst = MvcCore.Unity.Get<JN.Data.Service.INoticeService>().List().OrderByDescending(x => x.IsTop).ThenByDescending(x => x.ID).Take(10).ToList();
                                if (ggLst.Count > 0)
                                {

                                    foreach (var notice in ggLst)
                                    {
                                        <tr>
                                            <td class="center">@notice.CreateTime.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                <a href="@(Url.Action("Modify", "Notice", new { ID=notice.ID}))">
                                                    @notice.Title
                                                </a>
                                            </td>
                                        </tr>
                                }

                            }
                            else
                            {
                                <tr><td colspan="2">暂无通告</td></tr>
                        }
                                }
                            </tbody>
                            <!-- // Table body END -->

                        </table>
                    </div>
                </div>
                <!-- Stats/List/Sparklines Widget END -->

            </div>
            <div class="span6">
                <!-- Traffic Sources Pie Chart -->
                <div class="widget" data-toggle="collapse-widget">
                    <div class="widget-head">
                        <h4 class="heading glyphicons pie_chart"><i></i>登录历史</h4>
                    </div>
                    <div class="widget-body collapse in">
                        <table class="table table-bordered table-condensed">
                            @{
                            var actLst = MvcCore.Unity.Get<JN.Data.Service.IActLogService>().List(x => x.Location.Contains("/Admin/Login") && x.UID == Amodel.ID.ToString()).Take(10).OrderByDescending(x => x.ID).ToList();
                            if (actLst.Count > 0)
                            {

                                foreach (var log in actLst)
                                {
                                    <tr>
                                        <td>@log.IP</td>
                                        <td>@log.ActContent</td>
                                        <td>@log.CreateTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                    </tr>
                            }

                        }
                            }
                        </table>

                    </div>
                </div>
                <!-- // Traffic Sources Pie Chart END -->

            </div>
        </div>
    </div>
    </div><!-- /.page-content -->
    <!-- page specific plugin scripts -->
    <!--[if lte IE 8]>
      <script src="/assets/js/excanvas.min.js"></script>
    <![endif]-->
    @section scripts{
        <!-- Themer -->
<script>
	var themerPrimaryColor = primaryColor;
</script>
        	<!--  Flot Charts Plugin -->
<script src="/common/theme/scripts/plugins/charts/flot/jquery.flot.js"></script>
<script src="/common/theme/scripts/plugins/charts/flot/jquery.flot.pie.js"></script>
<script src="/common/theme/scripts/plugins/charts/flot/jquery.flot.tooltip.js"></script>
<script src="/common/theme/scripts/plugins/charts/flot/jquery.flot.selection.js"></script>
<script src="/common/theme/scripts/plugins/charts/flot/jquery.flot.resize.js"></script>
<script src="/common/theme/scripts/plugins/charts/flot/jquery.flot.orderBars.js"></script>

            @*<!-- Charts Helper Demo Script -->
<script src="/common/theme/scripts/demo/charts.helper.js?1369414384"></script>
            <!-- Charts Page Demo Script -->
<script src="/common/theme/scripts/demo/charts.js?1369414384"></script>*@

<script src="/js/echarts/echarts.min.js"></script>
<script type="text/javascript">

        var myChart = echarts.init(document.getElementById('chart_div'));
        myChart.setOption({
                    tooltip: {
                        trigger: 'axis',
                        position: function (pt) {
                            return [pt[0], '10%'];
                        }
                    },
                    title: {
                        left: 'center',
                        text: '会员新增数据',
                    },
                    legend: {
                        top: 'bottom',
                        data: ['意向']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: { show: true, readOnly: false },
                            magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: []
                    },
                    yAxis: {
                        type: 'value',
                        boundaryGap: [0, '100%']
                    },
                    series: [
                        {
                            name: '新增会员',
                            type: 'line',
                            smooth: true,
                            symbol: 'none',
                            sampling: 'average',
                            itemStyle: {
                                normal: {
                                    color: 'rgb(255, 70, 131)'
                                }
                            },
                            areaStyle: {
                                normal: {
                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                        offset: 0,
                                        color: 'rgb(255, 158, 68)'
                                    }, {
                                        offset: 1,
                                        color: 'rgb(255, 70, 131)'
                                    }])
                                }
                            },
                            data: []
                        }
                    ]
                });
                // 异步加载数据
                $.get('/admincenter/home/getcharUserdata').done(function (data) {
                    // 填入数据
                    myChart.setOption({
                        xAxis: {
                            data: data.dates
                        },
                        series: [{
                            // 根据名字对应到相应的系列
                            name: '销量',
                            data: data.datas
                        }]
                    });
                });

         var myBookChart = echarts.init(document.getElementById('chart_div_book'));
        myBookChart.setOption({
                    tooltip: {
                        trigger: 'axis',
                        position: function (pt) {
                            return [pt[0], '10%'];
                        }
                    },
                    title: {
                        left: 'center',
                        text: '图书数据统计表',
                    },
                    legend: {
                        top: 'bottom',
                        data: ['意向']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: { show: true, readOnly: false },
                            magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: []
                    },
                    yAxis: {
                        type: 'value',
                        boundaryGap: [0, '100%']
                    },
                    series: [
                        {
                            name: '新增图书',
                            type: 'line',
                            smooth: true,
                            symbol: 'none',
                            sampling: 'average',
                            itemStyle: {
                                normal: {
                                    color: 'rgb(255, 70, 131)'
                                }
                            },
                            areaStyle: {
                                normal: {
                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                        offset: 0,
                                        color: 'rgb(255, 158, 68)'
                                    }, {
                                        offset: 1,
                                        color: 'rgb(255, 70, 131)'
                                    }])
                                }
                            },
                            data: []
                        }
                    ]
                });
                // 异步加载数据
                $.get('/admincenter/home/getcharBookdata').done(function (data) {
                    // 填入数据
                    myBookChart.setOption({
                        xAxis: {
                            data: data.dates
                        },
                        series: [{
                            // 根据名字对应到相应的系列
                            name: '新增图书',
                            data: data.datas
                        }]
                    });
                });

          var myorderChart = echarts.init(document.getElementById('chart_div_shopOrder'));
        myorderChart.setOption({
                    tooltip: {
                        trigger: 'axis',
                        position: function (pt) {
                            return [pt[0], '10%'];
                        }
                    },
                    title: {
                        left: 'center',
                        text: '订单统计表',
                    },
                    legend: {
                        top: 'bottom',
                        data: ['意向']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: { show: true, readOnly: false },
                            magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: []
                    },
                    yAxis: {
                        type: 'value',
                        boundaryGap: [0, '100%']
                    },
                    series: [
                        {
                            name: '新增订单',
                            type: 'line',
                            smooth: true,
                            symbol: 'none',
                            sampling: 'average',
                            itemStyle: {
                                normal: {
                                    color: 'rgb(255, 70, 131)'
                                }
                            },
                            areaStyle: {
                                normal: {
                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                        offset: 0,
                                        color: 'rgb(255, 158, 68)'
                                    }, {
                                        offset: 1,
                                        color: 'rgb(255, 70, 131)'
                                    }])
                                }
                            },
                            data: []
                        }
                    ]
                });
                // 异步加载数据
                $.get('/admincenter/home/getcharOrderdata').done(function (data) {
                    // 填入数据
                    myorderChart.setOption({
                        xAxis: {
                            data: data.dates
                        },
                        series: [{
                            // 根据名字对应到相应的系列
                            name: '每月订单总量',
                            data: data.datas
                        }]
                    });
                });


          var ordercompaleChart = echarts.init(document.getElementById('chart_div_ordercompale'));
        ordercompaleChart.setOption({
                    tooltip: {
                        trigger: 'axis',
                        position: function (pt) {
                            return [pt[0], '10%'];
                        }
                    },
                    title: {
                        left: 'center',
                        text: '购物车数据统计表',
                    },
                    legend: {
                        top: 'bottom',
                        data: ['意向']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: { show: true, readOnly: false },
                            magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: []
                    },
                    yAxis: {
                        type: 'value',
                        boundaryGap: [0, '100%']
                    },
                    series: [
                        {
                            name: '加入购物车',
                            type: 'line',
                            smooth: true,
                            symbol: 'none',
                            sampling: 'average',
                            itemStyle: {
                                normal: {
                                    color: 'rgb(255, 70, 131)'
                                }
                            },
                            areaStyle: {
                                normal: {
                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                        offset: 0,
                                        color: 'rgb(255, 158, 68)'
                                    }, {
                                        offset: 1,
                                        color: 'rgb(255, 70, 131)'
                                    }])
                                }
                            },
                            data: []
                        }
                    ]
                });
                // 异步加载数据
                $.get('/admincenter/home/getshopCardata').done(function (data) {
                    // 填入数据
                    ordercompaleChart.setOption({
                        xAxis: {
                            data: data.dates
                        },
                        series: [{
                            // 根据名字对应到相应的系列
                            name: '今日累计增加',
                            data: data.datas
                        }]
                    });
                });

</script>

        <script type="text/javascript">
            jQuery(function ($) {
                $('.widget-container-span').sortable({
                    connectWith: '.widget-container-span',
                    items: '> .widget-box',
                    opacity: 0.8,
                    revert: true,
                    forceHelperSize: true,
                    placeholder: 'widget-placeholder',
                    forcePlaceholderSize: true,
                    tolerance: 'pointer'
                });
            });

            $(function () {
                $('#widget-progress-bar .bar').width("50%");
                setInterval(function () {
                    var w = mt_rand(30, 100);
                    $('#widget-progress-bar .steps-percent').html(w + "%");
                    $('#widget-progress-bar .bar').width(w + "%");
                }, 2000);
            });
        </script>
    }
